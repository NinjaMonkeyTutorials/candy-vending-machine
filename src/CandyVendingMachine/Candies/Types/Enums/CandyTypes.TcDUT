<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <DUT Name="CandyTypes" Id="{ebc8876e-b3e3-473e-87a6-a958896922e2}">
    <Declaration><![CDATA[(*

short summary
=============
Enumeration of the candy types.
A single bit represents each candy type.
The candy type is stored in a word => so there can be
16 different candy types.
As a sweet usually consists of a mixture of different types, 
the enumeration is not strict. 
Each sweet can save its type by setting the corresponding bits. 

legal notes
===========
SPDX-FileCopyrightText: © 2024 ekvip automation GmbH <info@ekvip.de>
SPDX-License-Identifier: Apache-2.0
For details check: Apache-2.0_

.. _Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0

*)

{attribute 'qualified_only'}
{attribute 'to_string'}
TYPE CandyTypes :
(
	(* bit 0 is type candy bar like a snickers *)
	CANDY_BARS		:= 16#0001,
	(* bit 1 is type candy corn like brach's candy corn *)
	CANDY_CORN		:= 16#0002,
	(* bit 2 is type stick candy like a christmas candy cane *)
	CANDY_STICKS	:= 16#0004,
	(* bit 3 is type caramel candy like omar cream *)
	CARAMEL_CANDY	:= 16#0008,
	(* bit 4 is type choclate candy like hershey *)
	CHOCOLATE_CANDY	:= 16#0010,
	(* bit 5 is type gummie candy like haribo *)
	GUMMY_CANDY		:= 16#0020,
	(* bit 6 is type mints like altoids *)
	MINTS			:= 16#0040,
	(* bit 7 is type lollipop like chupa chups *)
	LOLLIPOPS		:= 16#0080,
	(* bit 8 is type jawbreakers like willy wonka's everlasting gobstopper *) 
	JAWBREAKERS		:= 16#0100,
	(* bit 9 is type hard candy like pass pass pulse *)
	HARD_CANDY		:= 16#0200,
	(* bit 10 is type licorice candy like lakrids bülow *)
	LICORICE_CANDY	:= 16#0400,
	(* bit 11 is type sour candy like warheads *)
	SOUR_CANDY		:= 16#0800 	
)WORD;
END_TYPE
]]></Declaration>
  </DUT>
</TcPlcObject>